{"version":3,"sources":["containers/Presentation/UserList.js","containers/Presentation/AddBill.js","containers/Presentation/OwedList.js","containers/Presentation/TotalSplit.js","components/Login/LogoutButton.js","components/AuthenticationButton.js","containers/Presentation/Profile.js","http-common.js","services/bill.service.js","containers/BillGroup/BillGroup.js","containers/Home/Home.js","components/Login/LoginButton.js","App.js","reportWebVitals.js","index.js"],"names":["UserList","users","selectedUsers","currentUser","handleUserSelect","map","user","Form","Check","type","value","onChange","checked","includes","label","AddBill","handleAdd","handleSelectAll","handleSplitType","AddBillSchema","Yup","shape","billName","required","billAmt","positive","integer","validationSchema","onSubmit","values","initialValues","handleSubmit","handleChange","handleBlur","touched","errors","isValid","className","autoComplete","id","Label","Control","name","onBlur","as","size","Button","variant","onClick","length","OwedList","totalOwedBills","covered","Map","owes","listItems","index","entries","key","item","style","backgroundColor","push","TotalSplit","owedBills","ListGroup","bill","Item","action","billTo","billFrom","billAmount","LogoutButton","app","Realm","history","useHistory","logOut","AuthenticationButton","Profile","React","useState","profile","email","to","axios","create","baseURL","headers","data","http","post","get","put","delete","BillGroup","props","state","bind","setOwedBills","this","getTotalOwed","getUserList","mongo","mongoClient","mongoCollection","db","collection","findManyQueryFilter","$and","$or","groupName","match","params","find","allowedBillsResult","console","log","body","BillDataService","getAll","then","response","billForUser","billToUser","hasOwnProperty","typeMap","has","amount","parseInt","set","otherType","otherTypeMap","otherAmount","_partition","allBillsResult","allBills","Promise","resolve","bills","forEach","calculateTotalOwedBills","setState","queryFilter","findOne","groupResult","group","allUsers","participants","selectUserList","insertMany","error","document","getElementById","billedTo","splitType","filter","newBills","i","billFromId","toFixed","insertBills","reset","event","target","indexOf","splice","Container","fluid","Row","Col","md","Component","withRouter","Home","groupList","getGroupList","handleAddGroup","groupListResult","groupObj","update","options","upsert","updateOne","groupQueryFilter","update2","inline","srOnly","placeholder","LoginEmailPassword","setUser","AttemptLogin","password","credentials","emailPassword","logIn","err","onKeyDown","e","keyCode","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.4fa1b62b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nexport default function UserList({ users, currentUser, selectedUsers, handleUserSelect }) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\tusers.map((user) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div key={user}>\r\n\t\t\t\t\t\t\t<Form.Check\r\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\t\tvalue={user}\r\n\t\t\t\t\t\t\t\tonChange={handleUserSelect}\r\n\t\t\t\t\t\t\t\tchecked={ selectedUsers.includes(user)}\r\n\t\t\t\t\t\t\t\tlabel={user}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t))}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n","import React from 'react';\r\nimport UserList from './UserList';\r\n\r\nimport { Formik} from 'formik';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport * as Yup from \"yup\";\r\n\r\nexport default function AddBill({handleAdd, users, currentUser, selectedUsers, handleUserSelect, handleSelectAll, handleSplitType}) {\r\n\r\n\tconst AddBillSchema = Yup.object().shape({\r\n\t\tbillName: Yup.string()\r\n\t\t\t.required(\"Required\"),\r\n\r\n\t\tbillAmt: Yup.number()\r\n\t\t\t.required(\"Required\")\r\n\t\t\t.positive(\"Amount must be postive.\")\r\n\t\t\t.integer(),\r\n\r\n\t});\r\n\r\n\r\n\treturn(\r\n\t\t\t<Formik \r\n\t\t\t\tvalidationSchema={AddBillSchema}\r\n\t\t\t\tonSubmit= {(values) => {\r\n\t\t\t\t\thandleAdd();\r\n\t\t\t\t}}\r\n\t\t\t\tinitialValues= {{\r\n\t\t\t\t\tbillName: '',\r\n\t\t\t\t\tbillAmt: '',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{({\r\n\t\t\t\t\thandleSubmit,\r\n\t\t\t\t\thandleChange,\r\n\t\t\t\t\thandleBlur,\r\n\t\t\t\t\tvalues,\r\n\t\t\t\t\ttouched,\r\n\t\t\t\t\tisValid,\r\n\t\t\t\t\terrors\r\n\t\t\t\t}) => (\r\n\t\t      <Form className=\"col-sm-2 addBill\" autoComplete=\"off\" onSubmit={handleSubmit} id=\"add-bill\">\r\n\t\t        <Form.Label>Bill Name</Form.Label>\r\n\t\t        <Form.Control \r\n\t\t        \tclassName=\"billInput\"\r\n\t\t        \tid=\"billName\"\r\n\t\t        \tname=\"billName\"\r\n\t\t        \ttype=\"text\" \r\n\t\t        \tonChange={handleChange}\r\n\t\t        \tonBlur={handleBlur}\r\n\t\t        \tvalue={values.billName}\r\n\t\t        \tisValid={touched.billName && !errors.billName}/>\r\n\t\t        \t{touched.billName && errors.billName && <div>{errors.billName}</div>}<br/>\r\n\t        \t<Form.Label>Bill Amount</Form.Label>\t\r\n\t\t        <Form.Control \r\n\t\t        \tclassName=\"billInput\"\r\n\t\t        \tid=\"billAmt\" \r\n\t\t        \tname=\"billAmt\"\r\n\t\t        \ttype=\"text\" \r\n\t\t        \tonChange={handleChange}\r\n\t\t        \tonBlur={handleBlur}\r\n\t\t        \tvalue={values.billAmt}\r\n\t\t        \tisValid={touched.billAmt && !errors.billAmt}/>\r\n\t\t        \t{touched.billAmt && errors.billAmt && <div>{errors.billAmt}</div>}<br/>\r\n\t\t        <Form.Control \r\n\t\t        \tclassName=\"splitType\" \r\n\t\t        \tid=\"splitType\" \r\n\t\t        \tonChange={handleSplitType}\r\n\t\t        \tas=\"select\" \r\n\t\t        \tsize=\"sm\">\r\n\t\t        \t<option>Split Bill Amount</option>\r\n\t\t        \t<option>Charge Each Amount</option>\r\n\t\t        </Form.Control>\r\n\t\t        <UserList name=\"selectedUsers\" id=\"selectedUsers\" value={values.selectedUsers} users = {users} currentUser={currentUser} selectedUsers={selectedUsers} handleUserSelect={handleUserSelect}/>\r\n\t\t      \t<Button variant=\"outline-dark\" \r\n\t\t      \t\t\t\t\ttype=\"submit\" \r\n\t\t      \t\t\t\t\tclassName=\"button\">\r\n\t\t\t\t\t\tAdd\r\n\t\t\t\t\t\t</Button>\r\n\t\t      \t<Button variant=\"outline-dark\" \r\n\t\t      \t\t\t\t\ttype=\"button\" \r\n\t\t      \t\t\t\t\tonClick={handleSelectAll} \r\n\t\t      \t\t\t\t\tclassName=\"button\">\r\n\t\t\t\t\t\t{(users.length === selectedUsers.length) ? \"Clear\" : \"Select All\"}\r\n\t\t\t\t\t\t</Button>\r\n\t\t      </Form>\r\n\r\n\t\t\t\t)}\r\n\t\t\t</Formik>\r\n\r\n\r\n\t);\r\n}","import React from \"react\";\r\n\r\nexport default function OwedList({ totalOwedBills, user }) {\r\n\tconst covered = totalOwedBills[user] && totalOwedBills[user].covered ? totalOwedBills[user].covered : new Map();\r\n\tconst owes = totalOwedBills[user] && totalOwedBills[user].owes ? totalOwedBills[user].owes : new Map();\r\n\tlet listItems = [];\r\n\tlet index = 0;\r\n\tfor (let [key, value] of covered.entries()) {\r\n\t  let item = <div key={index++} style={{backgroundColor: \"green\"}} >{key} owes you ${value} total</div>;\r\n\t  listItems.push(item);\r\n\t}\r\n\tfor (let [key, value] of owes.entries()) {\r\n\t  let item = <div key={index++} style={{backgroundColor: \"red\"}}>You owe {key} ${value} total</div>;\r\n\t  listItems.push(item);\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"owedList col-sm-4\">\r\n\t\t\t<ul >\r\n\t\t\t\t{listItems}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\n\r\nimport { ListGroup } from 'react-bootstrap';\r\n\r\nexport default function TotalSplit({ owedBills }) {\r\n\treturn (\r\n\t\t<div className=\"totalSplit col-sm-6\">\r\n\t\t\t<ListGroup className=\"splitList\">\r\n\t\t\t\t{\r\n\t\t\t\t\towedBills ? owedBills.map((bill, index) => (\r\n\t\t\t\t\t\t<ListGroup.Item action key={index}>{bill.billTo} owes {bill.billFrom} : ${bill.billAmount} for {bill.billName}</ListGroup.Item>\r\n\t\t\t\t\t)) : <br/>}\r\n\t\t\t</ListGroup>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\nimport * as Realm from \"realm-web\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst LogoutButton = () => {\r\n  const REALM_APP_ID = \"billsplit-enxhm\"; // e.g. myapp-abcde\r\n\tconst app = new Realm.App({ id: REALM_APP_ID });\r\n  const history = useHistory();\r\n\r\n\tfunction logout() {\r\n\t\tapp.currentUser.logOut();\r\n\t\t// window.location.reload(false);\r\n    history.push(\"/login\");\r\n\r\n\t}\r\n\r\n  return (\r\n    <Button onClick={() => logout()}>\r\n      Log Out\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default LogoutButton;","import React from \"react\";\r\n\r\nimport LogoutButton from \"./Login/LogoutButton\";\r\n\r\nconst AuthenticationButton = () => {\r\n\r\n  return <LogoutButton /> ;\r\n};\r\n\r\nexport default AuthenticationButton;","import React from \"react\";\r\nimport * as Realm from \"realm-web\";\r\nimport AuthenticationButton from '../../components/AuthenticationButton';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst Profile = () => {\r\n  const REALM_APP_ID = \"billsplit-enxhm\"; \r\n  const app = new Realm.App({ id: REALM_APP_ID });\r\n\r\n  const [user] = React.useState(app.currentUser);\r\n\r\n  return (\r\n    user && (\r\n      <div className = \"profile\" >\r\n        <h4>{user.name}</h4>\r\n        <p>{user.profile.email}</p>\r\n        <AuthenticationButton /> \r\n        <Link to=\"/\">\r\n          <Button type=\"button\">\r\n            Home\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Profile;","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://localhost:3000/api\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});\r\n","import http from \"../http-common\";\r\n\r\nclass BillDataService {\r\n  getAll(data) {\r\n    return http.post(\"/bills\", data);\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/bill/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/bill\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/bill/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/bill/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(`/bill`);\r\n  }\r\n\r\n}\r\n\r\nexport default new BillDataService();\r\n","import React from 'react';\r\nimport AddBill from '../Presentation/AddBill';\r\nimport OwedList from '../Presentation/OwedList';\r\nimport TotalSplit from '../Presentation/TotalSplit';\r\nimport Profile from '../Presentation/Profile';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport BillDataService from \"../../services/bill.service.js\";\r\n\r\nimport './BillGroup.scss';\r\n\r\nexport class BillGroup extends React.Component {\r\n\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {selectedUsers : []};\r\n\t\tthis.handleAdd = this.handleAdd.bind(this);\r\n\t\tthis.handleUserSelect = this.handleUserSelect.bind(this);\r\n\t\tthis.setOwedBills = this.setOwedBills.bind(this);\r\n\t\tthis.handleSelectAll = this.handleSelectAll.bind(this);\r\n\t\tthis.handleSplitType = this.handleSplitType.bind(this);\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tthis.setOwedBills();\r\n\t\tthis.getTotalOwed();\r\n\t\tthis.getUserList();\r\n\t}\r\n\r\n\tasync getOwedBills() {\r\n\t\ttry {\r\n\t    const mongo = this.props.user.mongoClient(\"mongodb-atlas\");\r\n\t\t\tconst mongoCollection = mongo.db(\"BillSplit\").collection(\"Bills\");\r\n\r\n\t\t\tconst findManyQueryFilter = (\r\n\t\t\t\t\t{ $and: [\r\n\t\t\t\t\t\t{ $or: [{billFrom: this.props.user.profile.email}, {billTo: this.props.user.profile.email}] },\r\n\t\t\t\t\t\t{ groupName: this.props.match.params.groupName}\r\n\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t );\r\n\t\t\tconst allowedBillsResult = await mongoCollection.find(findManyQueryFilter);\r\n\r\n\t\t\treturn allowedBillsResult;\r\n\t\t} catch(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t}\r\n\r\n\tsetOwedBills() {\r\n\r\n\t\tlet body = {\r\n\t\t\temail: this.props.user.profile.email,\r\n\t\t\tgroupName: this.props.match.params.groupName,\r\n\t\t}\r\n\t\tBillDataService.getAll(body).then(response => {\r\n\t\t\tconsole.log(\"AAAA\" + response.data);\r\n\t\t})\r\n\r\n\r\n\r\n\t\t// let billResult = Promise.resolve(this.getOwedBills());\r\n\t\t// let owedBills = Promise.resolve(billResult);\r\n\t\t// owedBills.then((v) => {\r\n\t\t// \tthis.setState({ owedBills : v});\r\n\t\t// })\r\n\t}\r\n\r\n\r\n\tcalculateTotalOwedBills(bill, totalOwedBills, type) {\r\n\t\tlet billForUser = (type === 'covered') ? bill.billFrom : bill.billTo;\r\n\t\tlet billToUser = (type === 'covered') ? bill.billTo : bill.billFrom;\r\n\r\n\t\t// Check if the user has already been added\r\n\t\tif(!totalOwedBills.hasOwnProperty(billForUser)) {\r\n\t\t\tlet typeMap = new Map();\r\n\r\n\t\t\ttypeMap.set(billToUser, parseInt(bill.billAmount));\r\n\t\t\tlet user = {};\r\n\t\t\tuser[type] = typeMap;\r\n\t\t\ttotalOwedBills[billForUser] = user;\r\n\t\t} else {\r\n\t\t\t// Check if a type (covered, owes) map already exists\r\n\t\t\tif(totalOwedBills[billForUser].hasOwnProperty(type)) {\r\n\t\t\t\tlet typeMap = totalOwedBills[billForUser][type];\r\n\t\t\t\t// Check if covered person is already added\r\n\t\t\t\tif(!typeMap.has(billToUser)) {\r\n\t\t\t\t\ttypeMap.set(billToUser, parseInt(bill.billAmount));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet amount = typeMap.get(billToUser);\r\n\t\t\t\t\tamount += parseInt(bill.billAmount);\r\n\t\t\t\t\ttypeMap.set(billToUser, amount);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// No type (covered, owes) map exists\r\n\t\t\t\tlet user = totalOwedBills[billForUser];\r\n\t\t\t\t// Check if a owes map exists so it doesn't get overwritten\r\n\t\t\t\tlet otherType = (type === 'covered') ? 'owes' : 'covered';\r\n\t\t\t\t// Other type of map already exists, calculate difference\r\n\t\t\t\tif(totalOwedBills[billForUser].hasOwnProperty(otherType)) {\r\n\t\t\t\t\tlet otherTypeMap = totalOwedBills[billForUser][otherType];\r\n\t\t\t\t\tif(otherTypeMap.has(billToUser)) {\r\n\t\t\t\t\t\tlet otherAmount = otherTypeMap.get(billToUser);\r\n\r\n\t\t\t\t\t\tif(otherAmount - bill.billAmount > 0) {\r\n\t\t\t\t\t\t\totherTypeMap.set(billToUser, otherAmount - bill.billAmount);\r\n\t\t\t\t\t\t} else if(otherAmount - bill.billAmount < 0) {\r\n\t\t\t\t\t\t\tlet typeMap = new Map();\r\n\r\n\t\t\t\t\t\t\ttypeMap.set(billToUser, parseInt(bill.billAmount) - otherAmount);\r\n\t\t\t\t\t\t\tuser[type] = typeMap;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\totherTypeMap.delete(billToUser);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// User has otherType map but doesn't include billToUser so new type map created\r\n\t\t\t\t\t\tlet typeMap = new Map();\r\n\r\n\t\t\t\t\t\ttypeMap.set(billToUser, parseInt(bill.billAmount));\r\n\r\n\t\t\t\t\t\tlet user = totalOwedBills[billForUser];\r\n\t\t\t\t\t\tuser[type] = typeMap;\r\n\t\t\t\t\t\ttotalOwedBills[billForUser] = user;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// User is completely new\r\n\t\t\t\t\tlet typeMap = new Map();\r\n\r\n\t\t\t\t\ttypeMap.set(billToUser, parseInt(bill.billAmount));\r\n\r\n\t\t\t\t\tlet user = {};\r\n\t\t\t\t\tuser[type] = typeMap;\r\n\t\t\t\t\ttotalOwedBills[billForUser] = user;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync getTotalOwed() {\r\n\t\tconst mongo = this.props.user.mongoClient(\"mongodb-atlas\");\r\n\t\tconst mongoCollection = mongo.db(\"BillSplit\").collection(\"Bills\");\r\n\r\n\t\tconst findManyQueryFilter = { _partition: \"Bill\", groupName: this.props.match.params.groupName};\r\n\t\tconst allBillsResult = await mongoCollection.find(findManyQueryFilter);\r\n\r\n\t\tlet allBills = Promise.resolve(Promise.resolve(allBillsResult));\r\n\t\tlet totalOwedBills = {};\r\n\t\tallBills.then((bills) => {\r\n\t\t\tbills.forEach(bill => {\r\n\t\t\t\t// Check owed amounts for logged in user only\r\n\t\t\t\tif(this.props.user.profile.email === bill.billFrom) {\r\n\t\t\t\t\tthis.calculateTotalOwedBills(bill, totalOwedBills, 'covered');\r\n\t\t\t\t}\r\n\t\t\t\tif(this.props.user.profile.email === bill.billTo) {\r\n\t\t\t\t\tthis.calculateTotalOwedBills(bill, totalOwedBills, 'owes');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tthis.setState({ totalOwedBills : totalOwedBills});\r\n\t\t})\r\n\t}\r\n\r\n\tasync getUserList() {\r\n\t\tconst mongo = this.props.user.mongoClient(\"mongodb-atlas\");\r\n\t\tconst mongoCollection = mongo.db(\"BillSplit\").collection(\"Bills\");\r\n\r\n\t\tconst queryFilter = { _partition: \"group\", groupName: this.props.match.params.groupName};\r\n\t\tconst groupResult = await mongoCollection.findOne(queryFilter);\r\n\r\n\t\tlet groupObject = Promise.resolve(Promise.resolve(groupResult));\r\n\t\tgroupObject.then((group) => {\r\n\t\t\tthis.setState({ allUsers : group.participants, selectUserList: group.participants});\r\n\t\t})\r\n\t}\r\n\r\n\r\n\tasync insertBills(owedBills) {\r\n\t\ttry {\r\n\t\t\tlet user = this.props.user;\r\n\r\n\t    const mongo = user.mongoClient(\"mongodb-atlas\");\r\n\t\t\tconst mongoCollection = mongo.db(\"BillSplit\").collection(\"Bills\");\r\n\r\n\t\t\tmongoCollection.insertMany(owedBills);\r\n\t\t\t\r\n\t\t} catch(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t}\r\n\r\n\thandleAdd() {\r\n\t\t// Prevent the page from refreshing\r\n\t\t// event.preventDefault();\r\n\t\tlet billName = document.getElementById(\"billName\").value;\r\n\t\tlet billAmt = document.getElementById(\"billAmt\").value;\r\n\t\tlet billedTo = this.state.selectedUsers;\r\n\t\tlet splitType = document.getElementById(\"splitType\").value;\r\n\r\n\t\tlet user = this.props.user;\r\n\r\n\t\t// Change bill amount depending on split type\r\n\t\tif(splitType === \"Split Bill Amount\") {\r\n\t\t\tif(billedTo.includes(user.profile.email)) {\r\n\t\t\t\tlet splitBy = billedTo.length - 1;\r\n\t\t\t\tbillAmt = billAmt / splitBy;\r\n\t\t\t\tbilledTo = billedTo.filter(user => user !== this.props.user.profile.email);\r\n\t\t\t} else {\r\n\t\t\t\tbillAmt = billAmt / billedTo.length;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet newBills = [];\r\n\t\tlet owedBills = this.state.owedBills;\r\n\t\tlet totalOwedBills = this.state.totalOwedBills;\r\n\t\tfor(let i = 0; i < billedTo.length; i++) {\r\n\t\t\tlet bill = {\r\n\t\t\t\t\t\t\t\t\t\tbillFromId : user.id,\r\n\t\t\t\t\t\t\t\t\t\tbillName : billName,\r\n\t\t\t\t\t\t\t\t\t\tbillTo : billedTo[i],\r\n\t\t\t\t\t\t\t\t\t\tbillFrom : this.props.user.profile.email,\r\n\t\t\t\t\t\t\t\t\t\tbillAmount : billAmt.toFixed(2),\r\n\t\t\t\t\t\t\t\t\t\tgroupName : this.props.match.params.groupName,\r\n\t\t\t\t\t\t\t\t\t\t_partition: 'Bill'\r\n\t\t\t\t\t\t\t\t\t};\r\n\r\n\t\t\tthis.calculateTotalOwedBills(bill, totalOwedBills, 'covered');\r\n\r\n\t\t\tnewBills.push(bill);\r\n\t\t\towedBills.push(bill);\r\n\t\t}\r\n\r\n\t\tthis.insertBills(newBills);\r\n\t\tthis.setState({owedBills : owedBills, totalOwedBills : totalOwedBills});\r\n\r\n\t\tdocument.getElementById(\"add-bill\").reset();\r\n\t\tthis.setState({selectedUsers : []});\r\n\t}\r\n\r\n\thandleUserSelect(event) {\r\n\t\tconst selectedUsers = this.state.selectedUsers;\r\n\t\tlet index;\r\n\r\n\t\tif(event.target.checked) {\r\n\t\t\tselectedUsers.push(event.target.value);\r\n\t\t} else {\r\n\t\t\tindex = selectedUsers.indexOf(event.target.value);\r\n\t\t\tselectedUsers.splice(index, 1);\r\n\t\t}\r\n\r\n\t\tthis.setState({selectedUsers: selectedUsers});\r\n\t}\r\n\r\n\thandleSelectAll() {\r\n\t\tlet selectedUsers = this.state.selectedUsers;\r\n\t\tlet users = this.state.selectUserList;\r\n\t\tif(users.length === selectedUsers.length) {\r\n\t\t\tselectedUsers = [];\r\n\t\t} else {\r\n\t\t\tusers.filter(user => !selectedUsers.includes(user)).map((user) => selectedUsers.push(user));\r\n\t\t}\r\n\r\n\t\tthis.setState({selectedUsers: selectedUsers});\r\n\t}\r\n\r\n\thandleSplitType() {\r\n\t\tlet splitType = document.getElementById(\"splitType\").value;\r\n\t\tlet user = this.props.user;\r\n\t\tlet email = user.profile ?  user.profile.email : \"\";\r\n\r\n\t\tif(splitType === \"Charge Each Amount\") {\r\n\t\t\tlet users = this.state.selectUserList;\r\n\t\t\tusers = users.filter(user => user !== email);\r\n\t\t\tthis.setState({ selectUserList : users});\r\n\t\t} else {\r\n\t\t\tlet selectUserList = this.state.allUsers;\r\n\t\t\tthis.setState({ selectUserList : selectUserList});\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\t\treturn (\r\n\t\t\t\t<Container fluid className=\"container-fluid\">\r\n\t\t\t\t\t<Row className=\"row\">\r\n\t\t\t\t\t\t<Col><h1 className = \"groupName\" >{this.props.match.params.groupName}</h1></Col>\r\n\t\t\t\t\t\t<Col md=\"auto\"><Profile /></Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<Row className=\"row\" >\r\n\t\t\t\t\t\t<AddBill \thandleAdd={this.handleAdd} \r\n\t\t\t\t\t\t\t\t\t\t \tusers={this.state.selectUserList ? this.state.selectUserList : []} \r\n\t\t\t\t\t\t\t\t\t\t \tcurrentUser={this.props.user.profile ? this.props.user.profile.email : ''}\r\n\t\t\t\t\t\t\t\t\t\t \tselectedUsers={this.state.selectedUsers}\r\n\t\t\t\t\t\t\t\t\t\t \thandleUserSelect={this.handleUserSelect}\r\n\t\t\t\t\t\t\t\t\t\t \thandleSelectAll={this.handleSelectAll}\r\n\t\t\t\t\t\t\t\t\t\t \thandleSplitType={this.handleSplitType}/>\r\n\t\t\t\t\t\t<TotalSplit className = \"col-sm-6\"\r\n\t\t\t\t\t\t\t\t\t\t\t\towedBills={this.state.owedBills} />\r\n\t\t\t\t\t\t<OwedList className = \"col-sm-3\"\r\n\t\t\t\t\t\t\t\t\t\t\ttotalOwedBills = {this.state.totalOwedBills || {}}\r\n\t\t\t\t\t\t\t\t\t\t\tuser = {this.props.user.profile.email || {}} />\r\n\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t</Container>\r\n\t\t\t);\r\n\t}\r\n\r\n}\r\n\r\n\r\n\r\nexport default withRouter(BillGroup);","import React from 'react';\r\nimport { Button, Form, Container, Row, Col } from 'react-bootstrap';\r\nimport Profile from '../Presentation/Profile';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport '../BillGroup/BillGroup.scss';\r\n\r\nexport class Home extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tgroupList: [],\r\n\t\t};\r\n\t\tthis.getGroupList = this.getGroupList.bind(this);\r\n\t\tthis.handleAddGroup = this.handleAddGroup.bind(this);\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tthis.getGroupList();\r\n\t}\r\n\r\n\tasync getGroupList() {\r\n\t\tconst mongo = this.props.user.mongoClient(\"mongodb-atlas\");\r\n\t\tconst mongoCollection = mongo.db(\"BillSplit\").collection(\"Bills\");\r\n\r\n\t\tconst queryFilter = { _partition: \"userInfo\" , name: this.props.user.profile.email};\r\n\t\tconst groupListResult = await mongoCollection.findOne(queryFilter);\r\n\r\n\t\tlet groupList = Promise.resolve(Promise.resolve(groupListResult));\r\n\t\tgroupList.then((groupObj) => {\r\n\t\t\tthis.setState({ groupList : groupObj.groupList });\r\n\t\t})\r\n\t}\r\n\r\n\tasync handleAddGroup() {\r\n\t\tlet groupName = document.getElementById(\"groupName\").value;\r\n\r\n\t\tlet groupList = this.state.groupList;\r\n\t\tgroupList.push(groupName);\r\n\r\n\t\tconst mongo = this.props.user.mongoClient(\"mongodb-atlas\");\r\n\t\tconst mongoCollection = mongo.db(\"BillSplit\").collection(\"Bills\");\r\n\r\n\t\tconst queryFilter = { _partition: \"userInfo\" , name: this.props.user.profile.email};\r\n\t\tconst update = { _partition: \"userInfo\", name: this.props.user.profile.email, groupList: groupList};\r\n\t\t// Insert or update\r\n\t\tconst options = {upsert: true};\r\n\r\n\t\tawait mongoCollection.updateOne(queryFilter, update, options);\r\n\r\n\t\tconst groupQueryFilter = { _partition: \"group\", groupName: groupName};\r\n\t\tlet participants = [this.props.user.profile.email];\r\n\t\tconst update2 = { _partition: \"group\", groupName: groupName, participants: participants }\r\n\r\n\t\tawait mongoCollection.updateOne(groupQueryFilter, update2, options);\r\n\r\n\t\tthis.setState({ groupList : groupList });\r\n\r\n\t\tdocument.getElementById(\"groupForm\").reset();\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<Container fluid className=\"container-fluid\">\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col><h1 className = \"groupName\" >Bill Split</h1></Col>\r\n\t\t\t\t\t\t<Col md=\"auto\"><Profile /></Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row className=\"groupList\">\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.state.groupList.map((group) => (\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<Link to={`/${group}`}>{group}</Link>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t<Form className=\"addGroup\" id=\"groupForm\" inline>\r\n\t\t\t\t\t<Form.Row>\r\n\t\t\t\t\t\t<Form.Label srOnly>New Group</Form.Label>\r\n\t\t\t\t\t\t<Form.Control id=\"groupName\" size=\"sm\" type=\"text\" placeholder=\"New Group\" />\r\n\t\t\t\t\t</Form.Row>\r\n\t \t\t\t\t<Button className=\"addButton\"\r\n\t\t\t\t\t\tvariant=\"outline-dark\" \r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tonClick={this.handleAddGroup} >Add\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport * as Realm from \"realm-web\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Button } from 'react-bootstrap';\r\n\r\n\r\nexport default function LoginEmailPassword({ setUser }) {\r\n\tconst REALM_APP_ID = \"billsplit-enxhm\"; // e.g. myapp-abcde\r\n\tconst app = new Realm.App({ id: REALM_APP_ID });\r\n\tconst history = useHistory();\r\n\r\n  function AttemptLogin(setUser) {\r\n\t\tlet email = document.getElementById('email').value;\r\n\t\tlet password = document.getElementById('password').value;\r\n\t\tconst credentials = Realm.Credentials.emailPassword(email, password);\r\n\r\n\t\ttry {\r\n\t\t\t//Authenticate the user\r\n\t\t\tconst user = app.logIn(credentials);\r\n\t\t\tsetUser(user);\r\n\t\t\thistory.push(\"/\");\r\n\t\t} catch(err) {\r\n\t\t\tconsole.error(\"Failed log in\", err);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction keyPress(e) {\r\n\t\tif(e.keyCode === 13) {\r\n\t\t\tAttemptLogin(setUser);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t<div>\r\n\t\t<input type=\"text\" id=\"email\" placeholder=\"Email\"/><br/>\r\n\t\t<input type=\"text\" id=\"password\" placeholder=\"Password\" onKeyDown={keyPress} /><br/>\r\n\t\t<Button onClick={() => {AttemptLogin(setUser)}}>\r\n\t\tLog In\r\n\t\t</Button>\r\n\t</div>\r\n\r\n\t);\r\n};","import './App.css';\r\nimport React from 'react';\r\nimport BillGroup from './containers/BillGroup/BillGroup';\r\nimport Home from './containers/Home/Home';\r\nimport Login from './components/Login/LoginButton';\r\nimport * as Realm from \"realm-web\";\r\nimport {\r\n\tSwitch,\r\n\tRoute\r\n} from \"react-router-dom\";\r\n\r\nconst REALM_APP_ID = \"billsplit-enxhm\"; \r\nconst app = new Realm.App({ id: REALM_APP_ID });\r\n\r\n\r\n\r\nfunction App() {\r\n\tconst [user, setUser] = React.useState(app.currentUser);\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"/Login\">\r\n\t\t\t\t\t<Login setUser={setUser} />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/:groupName\">\r\n\t\t\t\t\t<BillGroup user={user} />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/\">\r\n\t\t\t\t\t<Home user={user} />\r\n\t\t\t\t</Route>\r\n\t\t\t\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n\t<BrowserRouter>\r\n    <App/>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}