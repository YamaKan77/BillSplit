[{"C:\\Users\\Kan\\OneDrive\\Documents\\Projects\\billsplit\\src\\components\\BillGroup\\BillGroup.js":"1","C:\\Users\\Kan\\OneDrive\\Documents\\Projects\\billsplit\\src\\index.js":"2","C:\\Users\\Kan\\OneDrive\\Documents\\Projects\\billsplit\\src\\components\\Login\\Login.js":"3","C:\\Users\\Kan\\OneDrive\\Documents\\Projects\\billsplit\\src\\reportWebVitals.js":"4"},{"size":9511,"mtime":1611359012004,"results":"5","hashOfConfig":"6"},{"size":599,"mtime":1612149030018,"results":"7","hashOfConfig":"6"},{"size":3573,"mtime":1611081122333,"results":"8","hashOfConfig":"6"},{"size":375,"mtime":1609192491741,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1wb295t",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Kan\\OneDrive\\Documents\\Projects\\billsplit\\src\\components\\BillGroup\\BillGroup.js",["20","21"],"C:\\Users\\Kan\\OneDrive\\Documents\\Projects\\billsplit\\src\\index.js",[],["22","23"],"C:\\Users\\Kan\\OneDrive\\Documents\\Projects\\billsplit\\src\\components\\Login\\Login.js",["24"],"import React from \"react\";\r\nimport * as Realm from \"realm-web\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Container, Row, Col, Button, Form } from 'react-bootstrap';\r\nimport { Formik} from 'formik';\r\nimport * as Yup from \"yup\";\r\n\r\n\r\nimport '../BillGroup/BillGroup.scss';\r\nimport icon from \"../../assets/Divy Up.png\";\r\n\r\nexport default function Login({ setUser }) {\r\n\tconst REALM_APP_ID = \"billsplit-enxhm\"; // e.g. myapp-abcde\r\n\tconst app = new Realm.App({ id: REALM_APP_ID });\r\n\tconst history = useHistory();\r\n\r\n  function AttemptLogin(setUser) {\r\n\t\tlet email = document.getElementById('email').value;\r\n\t\tlet password = document.getElementById('password').value;\r\n\t\t\r\n\t\tloginEmailPassword(email, password).then(user => {\r\n\t\t\thistory.push(\"/\");\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tasync function loginEmailPassword(email, password) {\r\n\t\tconst credentials = Realm.Credentials.emailPassword(email, password);\r\n\t\ttry {\r\n\t\t\t//Authenticate the user\r\n\t\t\tconst user = await app.logIn(credentials);\r\n\t\t\tsetUser(user);\r\n\t\t\treturn user;\r\n\t\t} catch(err) {\r\n\t\t\tconsole.error(\"Failed log in\", err);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction keyPress(e) {\r\n\t\tif(e.keyCode === 13) {\r\n\t\t\tAttemptLogin(setUser);\r\n\t\t}\r\n\t}\r\n\r\n\tasync function SignUp() {\r\n\t\tlet email = document.getElementById('email').value;\r\n\t\tlet password = document.getElementById('password').value;\r\n\r\n\t\tawait app.emailPasswordAuth.registerUser(email, password);\r\n\t}\r\n\r\n\tconst LoginSchema = Yup.object().shape({\r\n\t\temail: Yup.string()\r\n\t\t\t.required(\"Required\")\r\n\t\t\t.email(\"Must be valid email\"),\r\n\t});\r\n\r\n\r\n\treturn (\r\n\t<Container fluid md=\"auto\" className=\"loginContainer\">\r\n\t\t<Formik \r\n\t\t\tvalidationSchema={LoginSchema}\r\n\t\t\tonSubmit= {(values, {resetForm}) => {\r\n\t\t\t\tAttemptLogin(setUser);\r\n\t\t\t}}\r\n\t\t\tinitialValues= {{\r\n\t\t\t\temail: '',\r\n\t\t\t\tpassword: '',\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\thandleChange,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\tvalues,\r\n\t\t\t\ttouched,\r\n\t\t\t\tisValid,\r\n\t\t\t\terrors\r\n\t\t\t}) => (\r\n\t      <Form className=\"loginForm\" \r\n\t      \t\t\tautoComplete=\"off\" \r\n\t      \t\t\tonSubmit={handleSubmit} \r\n\t      \t\t\tid=\"emailForm\">\r\n\r\n    \t\t\t<Row>\r\n    \t\t\t\t<img className=\"homeIcon\" src={icon}/>\r\n    \t\t\t</Row>\r\n\t      \t<Row>\r\n\t      \t\t<Col className=\"idCol\" xs={3}>\r\n\t\t\t        <Form.Control \r\n\t\t\t        \tid=\"email\"\r\n\t\t\t        \tname=\"email\"\r\n\t\t\t        \ttype=\"text\" \r\n\t\t\t        \tonChange={handleChange}\r\n\t\t\t        \tonBlur={handleBlur}\r\n\t\t\t        \tvalue={values.email}\r\n\t\t\t        \tisValid={!errors.email}\r\n\t\t\t        \tplaceholder=\"Email\"\r\n\t\t\t        \tsize=\"sm\"/>\r\n\t\t\t        \t{errors.email && <div>{errors.email}</div>}\r\n\t\t       \t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col className=\"idCol\" xs={3}>\r\n\t\t\t        <Form.Control \r\n\t\t\t        \tid=\"password\"\r\n\t\t\t        \tname=\"password\"\r\n\t\t\t        \ttype=\"password\" \r\n\t\t\t        \tonChange={handleChange}\r\n\t\t\t        \tonBlur={handleBlur}\r\n\t\t\t        \tvalue={values.password}\r\n\t\t\t        \tisValid={!errors.password}\r\n\t\t\t        \tonKeyDown={keyPress}\r\n\t\t\t        \tplaceholder=\"Password\"\r\n\t\t\t        \tsize=\"sm\"/>\r\n\t\t\t        \t{errors.password && <div>{errors.password}</div>}\r\n\t\t       \t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t       \t<Col>\r\n\t\t\t      \t<Button id=\"profile-button\"\r\n\t\t\t      \t\t\t\t\ttype=\"submit\" \r\n\t\t\t      \t\t\t\t\tclassName=\"button\"\r\n\t\t\t      \t\t\t\t\tsize=\"sm\">\r\n\t\t\t      \t\tLogin\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t      \t<Button id=\"profile-button\" \r\n\t\t\t      \t\t\t\t\ttype=\"button\" \r\n\t\t\t      \t\t\t\t\tclassName=\"button\"\r\n\t\t\t      \t\t\t\t\tonClick={() => {SignUp()}}\r\n\t\t\t      \t\t\t\t\tsize=\"sm\">\r\n\t\t\t      \t\tSign Up\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t      </Form>\r\n\r\n\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\t</Container>\r\n\r\n\t);\r\n};","C:\\Users\\Kan\\OneDrive\\Documents\\Projects\\billsplit\\src\\reportWebVitals.js",[],{"ruleId":"25","severity":1,"message":"26","line":9,"column":31,"nodeType":"27","messageId":"28","endLine":9,"endColumn":37},{"ruleId":"29","severity":1,"message":"30","line":280,"column":22,"nodeType":"31","endLine":280,"endColumn":56},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"29","severity":1,"message":"30","line":86,"column":9,"nodeType":"31","endLine":86,"endColumn":47},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-global-assign","no-unsafe-negation"]